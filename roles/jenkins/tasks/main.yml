---
 - name: download jenkins repo for REDHAT distributions
   get_url:
      url: "{{ url }}"
      dest: "{{ dest }}"
   when: ansible_os_family == "REDHAT"

 - name: Import jenkins key
   rpm_key:
      key: "{{ keys }}"
      state: present
   when: ansible_os_family == "REDHAT"

 - name: Install jenkins
   yum:
      name: jenkins
      state: present
   when: ansible_os_family == "REDHAT"

  - name: Add the jenkins apt signing key
    apt_key:
      url: https://pkg.jenkins.io/debian/jenkins.io.key
      state: present
    when: ansible_hostname == "Debian"

 - name: Add jenkins repository into sources list.
    apt_repository:
      repo: deb http://pkg.jenkins.io/debian-stable binary/
      state: present
    when: ansible_hostname == "Debian"

 - name: Install jenkins on ubuntu
   apt:
     name: jenkins
     state: present
   when: ansible_os_family == "Debian"

 - name: Start and enable Jenkins
   systemd:
      name: jenkins
      state: started
      enabled: yes

 - name: add aws config directory
   file:
     state: directory
     dest: /var/lib/jenkins/.aws
     mode: 0o750
     owner: jenkins
     group: staff

 - name: set up aws config for jenkins
   template:
     src: aws_config.j2
     dest: /var/lib/jenkins/.aws/config
     mode: 0o640
     owner: jenkins
     group: staff    

 - name: add ssh config directory
   file:
     state: directory
     dest: /var/lib/jenkins/.ssh
     mode: 0o750
     owner: jenkins
     group: staff

 - name: Allow jenkins user to have passwordless sudo
   lineinfile:
     dest: /etc/sudoers
     state: present
     regexp: '^jenkins'
     line: 'jenkins ALL=(ALL) NOPASSWD: ALL'
     validate: 'visudo -cf %s'

 - name: add Jenkins to the staff group
   user:
     name: jenkins
     append: true
     groups: "{{ item }}"
   with_items:
     - staff
     - docker

 - pause: seconds=10

 - name: retrieve initial password generated by jenkins
   shell: cat /var/lib/jenkins/secrets/initialAdminPassword
   register: shell_contents

 - name: display content on screen
   debug: msg="{{ shell_contents.stdout }}"
